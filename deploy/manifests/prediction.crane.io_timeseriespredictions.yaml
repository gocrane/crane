
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: timeseriespredictions.prediction.crane.io
spec:
  group: prediction.crane.io
  names:
    kind: TimeSeriesPrediction
    listKind: TimeSeriesPredictionList
    plural: timeseriespredictions
    singular: timeseriesprediction
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TimeSeriesPrediction is a prediction for a time series.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TimeSeriesPredictionSpec is a description of a TimeSeriesPrediction.
            properties:
              predictionMetrics:
                description: PredictionMetrics is an array of PredictionMetric
                items:
                  description: PredictionMetric describe what metric of your time series prediction, how to query, use which algorithm to predict.
                  properties:
                    algorithm:
                      description: Algorithm is the algorithm used by this prediction metric.
                      properties:
                        algorithmType:
                          description: AlgorithmType is the algorithm type, currently supports dsp and percentile.
                          type: string
                        dsp:
                          description: DSP is an algorithm which use FFT to deal with time series, typically it is used to predict some periodic time series
                          properties:
                            estimators:
                              description: Estimator
                              properties:
                                fft:
                                  items:
                                    properties:
                                      highFrequencyThreshold:
                                        type: string
                                      lowAmplitudeThreshold:
                                        type: string
                                      marginFraction:
                                        type: string
                                      maxNumOfSpectrumItems:
                                        format: int32
                                        type: integer
                                      minNumOfSpectrumItems:
                                        format: int32
                                        type: integer
                                    type: object
                                  type: array
                                maxValue:
                                  items:
                                    properties:
                                      marginFraction:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            historyLength:
                              description: HistoryLength describes how long back should be queried against provider to get historical metrics for prediction.
                              type: string
                            sampleInterval:
                              description: SampleInterval is the sampling interval of metrics.
                              type: string
                          type: object
                        percentile:
                          description: Percentile is an algorithm which use exponential time decay histogram, it can predict a reasonable value according your history time series
                          properties:
                            histogram:
                              properties:
                                bucketSize:
                                  type: string
                                bucketSizeGrowthRatio:
                                  type: string
                                epsilon:
                                  type: string
                                firstBucketSize:
                                  type: string
                                halfLife:
                                  type: string
                                maxValue:
                                  type: string
                              type: object
                            marginFraction:
                              type: string
                            minSampleWeight:
                              type: string
                            percentile:
                              type: string
                            sampleInterval:
                              type: string
                          type: object
                      type: object
                    metricSelector:
                      description: following QueryExpressions depend on your crane system data source configured when the system start. if you use different sources with your system start params, it is not valid. MetricSelector is a query expression of non-prometheus style, usually is api style
                      properties:
                        labels:
                          description: QueryConditions is a query condition list.
                          items:
                            description: QueryCondition is a key, operator, value triple. E.g. 'namespace = default', 'role in [Admin, Developer]'
                            properties:
                              key:
                                description: Key is the key of the query condition
                                type: string
                              operator:
                                description: Operator
                                type: string
                              value:
                                description: Value is the query value list.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        metricName:
                          description: MetricName is the name of the metric.
                          type: string
                      type: object
                    query:
                      description: Query is a query expression of DSL style, such as prometheus query language
                      properties:
                        expression:
                          description: Expression is the query expression. For prometheus, it is promQL.
                          type: string
                      type: object
                    resourceIdentifier:
                      description: ResourceIdentifier is a resource to identify the metric, but now it is just a identifier now. reference otlp https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/sdk.md
                      type: string
                  type: object
                type: array
              predictionWindowSeconds:
                description: PredictionWindowSeconds is a time window in seconds, indicating how long to predict in the future.
                format: int32
                type: integer
            type: object
          status:
            description: TimeSeriesPredictionStatus is the status of a TimeSeriesPrediction.
            properties:
              conditions:
                description: Conditions is the condition of TimeSeriesPrediction
                items:
                  description: TimeSeriesPredictionCondition contains details for the current condition of this TimeSeriesPrediction.
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              predictionMetrics:
                additionalProperties:
                  items:
                    description: MetricTimeSeries is a stream of samples that belong to a metric with a set of labels
                    properties:
                      labels:
                        description: A collection of Labels that are attached by monitoring system as metadata for the metrics, which are known as dimensions.
                        items:
                          description: A Label is a Name and Value pair that provides additional information about the metric. It is metadata for the metric. For example, Kubernetes pod metrics always have 'namespace' label that represents which namespace it belongs to.
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      samples:
                        description: A collection of Samples in chronological order.
                        items:
                          description: Sample pairs a Value with a Timestamp.
                          properties:
                            timestamp:
                              format: int64
                              type: integer
                            value:
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                description: PredictionMetrics is a map, key is the metric name in your TimeSeriesPredictionSpec.PredictionMetric spec. value is an array of predicted time series. Note!!, the MetricTimeSeries maybe only has one instant sample value rather then a range values, which is depend on your PredictionMetric.Algorithm
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
