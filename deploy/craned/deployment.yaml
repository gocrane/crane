
apiVersion: v1
kind: Namespace
metadata:
  name: crane-system

---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: craned
  namespace: crane-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: craned
  namespace: crane-system
  labels:
    app: craned
spec:
  replicas: 1
  selector:
    matchLabels:
      app: craned
  template:
    metadata:
      labels:
        app: craned
    spec:
      serviceAccountName: craned
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
      containers:
        - name: craned
          image: docker.io/gocrane/craned:v0.5.0
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Asia/Shanghai
          command:
            - /craned
            - --prometheus-address=PROMETHEUS_ADDRESS
            - --feature-gates=Analysis=true,TimeSeriesPrediction=true,Autoscaling=true
            - --recommendation-config-file=/tmp/recommendation-config/config_set.yaml
            - -v=4
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - name: config
              mountPath: /tmp/recommendation-config
          readinessProbe:
            httpGet:
              path: /api/healthz
              port: 8082
              scheme: HTTP
        - image: docker.io/gocrane/dashboard:v0.5.0
          imagePullPolicy: IfNotPresent
          name: dashboard
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: nginx-conf
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-tls
        - name: config
          configMap:
            name: recommendation-config
        - name: nginx-conf
          configMap:
            name: nginx-conf

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSakNDQWk2Z0F3SUJBZ0lVY3F6aTdhaHVtYmM2N21ZVzVWTWxwWjVidTIwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0VERU9NQXdHQTFVRUF3d0ZZM0poYm1Vd0hoY05Nakl3TmpBMk1UTXhPVEEyV2hjTk16SXdOakF6TVRNeApPVEEyV2pBaU1TQXdIZ1lEVlFRRERCZGpjbUZ1WldRdVkzSmhibVV0YzNsemRHVnRMbk4yWXpDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtzczd2RXJDWFl4RTFFOUk5c1JXM3BJU2laSUQ4VmYKaklXNHJwRGxtVDhTYThJSzdjTVVaTVhSZ1EwNitHSTdhL2FaeXpDTGFnS2NHNWtzVHlxcEdLRUs1cWtWVG1lNgpXM2lOY2l5RzluTVg1bEo4M3l2Zmlha1AvRUVZZk52M3RqZlVtam9OZDVIVVVSdVVjTmhacVd5Um5FNFMwaE1uCjZPRnhCTTE5SmQvYnlxKzdGRWZnYXFkUEhlWFdMSFRYRElpV3dDU1FGUzZwNkl2RzErSzZYNmYxbzhUQUV2cm0KMXlKMldUUFVzTC9mU0M2dU4rdkpxMUNhbFZQNEVSR2lsdVBvYlo4WDFlMXZkZ3NCT2NTN29Nd3h6Ulc1WkRvNAppM2dmZFBwRU1panlTSFNZQWU2ZXloZzUwdHliRDZFTWt5bHp4QmR2cXNzRzZkZmNRc2FMSitzQ0F3RUFBYU9CCmhUQ0JnakFKQmdOVkhSTUVBakFBTUFzR0ExVWREd1FFQXdJRjREQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQWdZSUt3WUJCUVVIQXdFd1NRWURWUjBSQkVJd1FJSVhZM0poYm1Wa0xtTnlZVzVsTFhONWMzUmxiUzV6ZG1PQwpKV055WVc1bFpDNWpjbUZ1WlMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFGU1FqT1k2QUZRQTEzbWFqUWc4dTFWb3hKL1hzck1CMG9sZHlVdWQzSC9Sa1BNM1ZLUU8KR0R3bWUvRTZUbXZ1Q3l6WFJ6UEdPdXhwT0JocHdpUFRaVHhkaWM0VEk3YWt5TU1TbTF4RURPdDJidW1odks0TAo5bWxJNlZrcXlRS2ZSR05jaDNTU3RtTCtnRlRwbEswZXA5S1NCVnltYi9ueFRqOHNDU05SeTFjNElnOS91OTRtCngrQmpMMm5LMlFjSTVaWnFjVlppSHRZT2FOb3lCNWlXWnpOZlZ0QmlxYzdrTFJTSlZoNVpQdE1iMm1CMDdNdXEKL0svRzlSbjVHeU90c0VvZFVaVGtYaVBXcTFSM2lBQnNLNldUNFQ5QzZzalJ4V0NjMmpob1ZzK3BKM3Fvc0kwKwoxREtzczNlRTZwRDdtUm54bm1mWHpQa2tGaHVlcThVdzZUOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcXl6dThTc0pkakVUVVQwajJ4RmJla2hLSmtnUHhWK01oYml1a09XWlB4SnJ3Z3J0Cnd4Umt4ZEdCRFRyNFlqdHI5cG5MTUl0cUFwd2JtU3hQS3FrWW9Rcm1xUlZPWjdwYmVJMXlMSWIyY3hmbVVuemYKSzkrSnFRLzhRUmg4Mi9lMk45U2FPZzEza2RSUkc1UncyRm1wYkpHY1RoTFNFeWZvNFhFRXpYMGwzOXZLcjdzVQpSK0JxcDA4ZDVkWXNkTmNNaUpiQUpKQVZMcW5vaThiWDRycGZwL1dqeE1BUyt1YlhJblpaTTlTd3Y5OUlMcTQzCjY4bXJVSnFWVS9nUkVhS1c0K2h0bnhmVjdXOTJDd0U1eEx1Z3pESE5GYmxrT2ppTGVCOTAra1F5S1BKSWRKZ0IKN3A3S0dEblMzSnNQb1F5VEtYUEVGMitxeXdicDE5eEN4b3NuNndJREFRQUJBb0lCQURBbkg4QndIdVZFd081bAppS1NqcVZ3bzRkTUxDb1MzY0V4ZHU1Mi9PUERwT2E4SWJBSW94b0J2Z3lJNXFJM1pzWEZacWpNcHhOU2ZIWlJsClJvLzFxWndEK1Fjdm16TEsxZGgvMGRKODFPOWpsY00ycFlFdURRZW1HNHdrVzF0MXY2ak5BZVc2ekJ3VjRnc2sKSXVwNXJwT0FFcnhUeHd6a2VUcVNGSXZKM05Hd0NKTTEwUU8reUxDOEk2K0s3UzZHTVNxUkhKSUpXWnNBZ24rTwpYRmQxa056OWg3aS9ER004eEhVMHlBZlBTMG9ya29CT3JHekFMY3ZsN0NZWnU5NlBDL1o5ajN4cmU4ZnFCdk9BCm15VlQreXRuYmN3TmhDMktWbm5SVmZhSGwyS0RRNDJWQmRORmxwbVlDYkNJQVRmRmNtMFo1RlBLTms5aDYzN0UKS0RtbGtHRUNnWUVBNDFXaWNCRUhzekRSV0VpcG9IOHFVZnFBQXUzVldkSkpQSTRVV1kwMUdYNFhFdG9CNHlGUApBYTQ3M0c0NDBwSkI4aFVuVHZ0NzRGZTZFb1M4b0JyNjBFaGF5OHZLV1puSElrN1FlRURIdGtKRnhnK1YyMUxTCms4SThIT0VNekdzbUtmRzV2ZFVkaFlRVHdzam0xR2FOR2VFNFBCdDltbCs5MU9jN0VGc0RURFVDZ1lFQXdNSjgKSGVOc1Npanc2R043ekJlZTJOOEtKSWxaK3VYUmcvRjNPdUVFOXMvYkRwU09kWlN6LzZQQnFjRUNGSmNwdmJDbApBUnVzeXR3cU4yL0lSYkRvWkxmNGFqTG9TRml2MTFvYlZidno2TVVZWTlnb2g4NWVhZG1wSXprVHFBZjNlRkEwClhkNGpHSDBQdm9mOUZJU09WRE1Dc0xyUU5ZQUFBSXZFZXlndjU1OENnWUEwSDBRNUVZNkVaU0w2Yk42SGIrQ1MKSHk4T2ZOMDMxT0Q1dzFHakhwOFlFekxUSGF6bEdKUDJ2SzM0NGtTZzh1dXZ4MjNWekE4ZzVyeEExckl3dXo3YQpWbHlLOFZTWnFvcGZzVlpXMi9OdU5FK3ZFNCsyVTR6NFY4WlVrTHpRZVppc2NVRzI1by80TnNvWkZOcm54QU9CCjlZTmhOS1JkcXFucGtJS1lRMlhFS1FLQmdRQy9XRkFjMjBVRDJPQkx6M1YwZzM0TGlseG5LSEZKdmhqZEFUVjYKSFNUd1hDVDN0RUEyT0FiMkhYaUJLamNHZVlmVjVTUG1sYkpSTFh3Nnk1dmlrbG9lb1FEWGF2RnAzNSt1QnFSYgoxdGVvbVA0OUhyWWRHWjVmTk5IUlJUZGQ5WXFTeEFzM291cnp4REY4MFVGSXZNME1pQmFEbU81V0xWblRNT3M1CjFncTN3UUtCZ0NWL2NkZjhGWHFoTFhyVDRTNHAweVRoQVVVN1lGYjJSTjFvS2ZRZlBJZTdpTHVPdThDeXdrc0UKS1E2T2FwdWRUN205czdhaHJpNUlqcXJhZC9BNWNYOEZycW5rMU5RUUpvQjUyVDRIK0l2N0xKYm1jaW9aaFZ6UgpWN2lJZXI4Ti9nWXFnblNyV3ZwN3NmdXFnQ3ZnVTdrOTUvV2hGclBQdkFPNDNocE1JS2wxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: webhook-server-tls
  namespace: crane-system
type: kubernetes.io/tls

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: recommendation-config
  namespace: crane-system
data:
  config_set.yaml: |-
    apiVersion: analysis.crane.io/v1alpha1
    kind: ConfigSet
    configs:
      - targets: []
        properties:
          resource.cpu-request-percentile: "0.98"
          replicas.workload-min-replicas: "3"
          replicas.pod-min-ready-seconds: "30"
          replicas.pod-available-ratio: "0.5"
          replicas.default-min-replicas: "3"
          replicas.max-replicas-factor: "3"
          replicas.min-cpu-usage-threshold: "1"
          replicas.fluctuation-threshold: "1.5"
          replicas.min-cpu-target-utilization: "30"
          replicas.max-cpu-target-utilization: "75"
          replicas.cpu-target-utilization: "50"
          replicas.cpu-percentile: "95"
          replicas.reference-hpa: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: crane-system
data:
  nginx.conf: |
    gzip_static  on;
    gzip on;
    gzip_min_length 50000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/vnd.ms-fontobject
        application/wasm
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/bmp
        image/svg+xml
        text/cache-manifest
        text/calendar
        text/css
        text/javascript
        text/markdown
        text/plain
        text/xml
        text/x-component
        text/x-cross-domain-policy;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream cluster {
        server craned.crane-system:8082;
    }

    upstream grafana {
        server grafana.crane-system:8082;
    }

    server {
        server_name _;
        large_client_header_buffers 4 32k;
        add_header Cache-Control "must-revalidate";
        add_header Cache-Control "max-age=300";
        add_header ETag "1.90.0-rc.0";
        listen 9090;
        listen [::]:9090;
        location / {
            root /usr/share/nginx/html/;
            include /etc/nginx/mime.types;
            try_files $uri $uri/ /index.html;
        }
        location /grafana {
            proxy_connect_timeout       180;
            proxy_send_timeout          180;
            proxy_read_timeout          180;
            proxy_pass http://grafana;
            proxy_redirect off;
            rewrite /grafana/(.*) /$1 break;
            proxy_http_version 1.1;
            proxy_set_header  Host $http_host;
            proxy_set_header  Upgrade $http_upgrade;
            proxy_set_header  Connection $connection_upgrade;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /api/v1/cluster {
            proxy_connect_timeout       180;
            proxy_send_timeout          180;
            proxy_read_timeout          180;
            proxy_pass http://cluster;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /api/v1/namespaces {
            proxy_connect_timeout       180;
            proxy_send_timeout          180;
            proxy_read_timeout          180;
            proxy_pass http://cluster;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /api {
            proxy_connect_timeout       180;
            proxy_send_timeout          180;
            proxy_read_timeout          180;
            proxy_pass http://cluster;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
