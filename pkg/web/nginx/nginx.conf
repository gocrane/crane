error_log /dev/stdout debug;

events {}

# daemon off;


http {
  lua_package_path "$prefix/lua/?.lua;;";
  lua_shared_dict dns_ip_cache_storage 1m;
  access_log /dev/stdout;
  gzip_static  on;
  gzip on;
  gzip_min_length 50000;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types
      application/atom+xml
      application/geo+json
      application/javascript
      application/x-javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rdf+xml
      application/rss+xml
      application/vnd.ms-fontobject
      application/wasm
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/eot
      font/otf
      font/ttf
      image/bmp
      image/svg+xml
      text/cache-manifest
      text/calendar
      text/css
      text/javascript
      text/markdown
      text/plain
      text/xml
      text/x-component
      text/x-cross-domain-policy;

  map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
  }

  upstream cluster {
      server craned.crane-system:8082;
  }

  upstream grafana {
      server 0.0.0.1 max_fails=1; # just an invalid address as a place holder
      balancer_by_lua_block {
          local lb = require "lb"
          lb.set_domain("grafana", 8082)
      }
  }

  init_by_lua_file lua/get_nameserver.lua;

  server {
      server_name _;
      large_client_header_buffers 4 32k;
      add_header Cache-Control "must-revalidate";
      add_header Cache-Control "max-age=300";
      add_header ETag "1.90.0-rc.0";
      listen 9090;
      listen [::]:9090;
      location / {
          root /usr/share/nginx/html/;
          include mime.types;
          try_files $uri $uri/ /index.html;
      }
      location /grafana {
          proxy_connect_timeout       180;
          proxy_send_timeout          180;
          proxy_read_timeout          180;
          proxy_pass http://grafana;
          proxy_redirect off;
          rewrite /grafana/(.*) /$1 break;
          proxy_http_version 1.1;
          proxy_set_header  Host $http_host;
          proxy_set_header  Upgrade $http_upgrade;
          proxy_set_header  Connection $connection_upgrade;
          proxy_set_header  X-Real-IP  $remote_addr;
          proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
          access_by_lua_block {
              local dns = require "dns";
              dns.get_addr("grafana")
          }
      }
      location /api/v1/cluster {
          proxy_connect_timeout       180;
          proxy_send_timeout          180;
          proxy_read_timeout          180;
          proxy_pass http://cluster;
          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_set_header  X-Real-IP  $remote_addr;
          proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      }
      location /api/v1/namespaces {
          proxy_connect_timeout       180;
          proxy_send_timeout          180;
          proxy_read_timeout          180;
          proxy_pass http://cluster;
          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_set_header  X-Real-IP  $remote_addr;
          proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      }
      location /api {
          proxy_connect_timeout       180;
          proxy_send_timeout          180;
          proxy_read_timeout          180;
          proxy_pass http://cluster;
          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_set_header  X-Real-IP  $remote_addr;
          proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      }
  }
}
