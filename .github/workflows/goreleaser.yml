name: ci
on:
  push:
  pull_request:
    paths:
      - 'cmd/**'
      - 'pkg/**'
      - '**.go'
      - 'go.*'
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - id: git-versions
        run: |
            echo "::set-output name=git-version::$(git describe --tags --always)"
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: fix buildx environment
        run: docker run --privileged --rm tonistiigi/binfmt --install all
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Dashboard and push
        uses: docker/build-push-action@v3
        with:
          context: ./pkg/web
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/gocrane/crane/dashboard:${{steps.git-versions.outputs.git-version}}
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
      - run: go install github.com/golang/mock/mockgen@v1.6.0
      - run: cp $(go env GOPATH)/bin/mockgen /usr/local/bin/
      - run: mockgen -version
      - name: Run GoReleaser Snapshot
        uses: goreleaser/goreleaser-action@v3
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          distribution: goreleaser
          version: v1.9.2
          args: release --rm-dist --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser Tag
        uses: goreleaser/goreleaser-action@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: v1.9.2
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: docker images
        run: docker images
      - name: Upload assets Darwin_arm64
        uses: actions/upload-artifact@v3
        with:
          name: Darwin_arm64
          path: dist/*Darwin_arm64.tar.gz
      - name: Upload assets Darwin_x86_64
        uses: actions/upload-artifact@v3
        with:
          name: Darwin_x86_64
          path: dist/*Darwin_x86_64.tar.gz
      - name: Upload assets Linux_arm64
        uses: actions/upload-artifact@v3
        with:
          name: Linux_arm64
          path: dist/*Linux_arm64.tar.gz
      - name: Upload assets Linux_x86_64
        uses: actions/upload-artifact@v3
        with:
          name: Linux_x86_64
          path: dist/*Linux_x86_64.tar.gz
